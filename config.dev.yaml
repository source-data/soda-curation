##########################################################
#  Default Profile
##########################################################
default: &default
  pipeline:
    ##########################################################
    # 1) Extract  Figure Legends and Data Availability Sections
    ##########################################################
    # Updated extract_sections prompts for smolagents implementation
    extract_sections:
      openai:
        # OpenAI-specific parameters remain the same
        model: "gpt-4o"
        temperature: 0.1
        top_p: 1.0
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are a scientific text analyzer focused on extracting relevant sections from scientific manuscripts.
            You will extract the sections `figure legends` and `data availability` from the manuscript text provided.
            Your task is ONLY to find and return the complete figure-related text content from the manuscript.
                
            The text will be encoded as a `HTML` string and you are required to keep all the information available.

            Please extract the relevant portion(s) VERBATIM, exactly as they appear in the original text. 

            Key Instructions for extracting `Figure Legends` section:
            1. Look for figure captions throughout the entire document - they can appear:
              - In a dedicated section marked as "Figure Legends", "Figure Captions", etc.
              - Embedded in the results section
              - At the end of the manuscript
              - In an appendix section
              - Or anywhere else in the document

            2. Find ALL figure captions, including:
              - Main figures (Figure 1, Figure 2, etc.)
              - Expanded View figures (EV Figures)
              - Supplementary figures
              - Figure legends
              - Figure descriptions

            3. CRITICAL: You have access to a verification tool that checks if your extracted text is truly verbatim.
              USE THIS TOOL to confirm ALL extracted sections before returning them.
              You MUST ensure each extraction passes verification before finalizing your answer.

            4. IMPORTANT: Return the COMPLETE TEXT found, preserving:
              - All formatting and special characters
              - Statistical information
              - Scale bars and measurements
              - Panel labels and descriptions
              - Source references

            5. DO NOT:
              - Modify or rewrite the text
              - Summarize or shorten descriptions
              - Skip any figure-related content
              - Add any explanatory text of your own

            Key Instructions for extracting `Data availability` section:
            1. Look for the section titled "Data Availability" or similar in the manuscript.
            2. Extract the content of this section VERBATIM.
            3. Verify the extraction using the verification tool.
            4. Follow same formatting instructions as for the `Figure Legends` section.

            Remember: You MUST use the verification tool to ensure your extracted sections are exactly as they appear in the document.
            
            Return the extracted sections in the following format:
            {
              "figure_legends": "Complete figure-related text content from the manuscript",
              "data_availability": "Complete data availability section content from the manuscript"
            }
          user: |
            Expected figures: $expected_figure_count

            Expected figure labels: $expected_figure_labels
            
            Manuscript_text: $manuscript_text

            Extract the figure legends and data availability sections VERBATIM from the manuscript.
            Use the verification tool to ensure your extractions are exactly as they appear in the document.

    ##########################################################
    # 2) Extract Individual Captions Step
    ##########################################################
    extract_caption_title:
      openai:
        model: "gpt-4o"
        temperature: 0.1
        top_p: 1.0
        max_tokens: 4096
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an AI assistant specializing in extracting figure captions from scientific manuscripts.
            
            Your task is to extract ONLY the following for a specific figure:
            1. The figure label (e.g., "Figure 1")
            2. The caption title (the main descriptive heading of the figure)
            3. The complete caption text including all panel descriptions
            
            Guidelines:
            - Extract EXACTLY as it appears in the text (VERBATIM)
            - The caption title is typically the text before the first panel label
            - Maintain ALL formatting, punctuation, and special characters
            - Include HTML formatting if present
            - DO NOT modify or summarize the text
            
            CRITICAL: You have access to a verification tool called 'verify_caption_extraction' that checks if your extracted text is truly verbatim.
            ALWAYS use this tool to verify your extraction before finalizing your answer.
            If after 5 tries you can not get the full verbatim, return the most similar caption possible.

            Return your result as:

            ```json
            {
              "figure_label": "Figure X",
              "caption_title": "The main descriptive title",
              "figure_caption": "The complete caption text including all panel descriptions",
              "is_verbatim": true/false
            }
            ```
            
          user: |
            Extract the caption title and full text for $figure_label from the following text:
            
            $figure_captions
            
            Remember to verify your extraction is verbatim using the verification tool.

    extract_panel_sequence:
      openai:
        model: "gpt-4o"
        temperature: 0.1
        top_p: 1.0
        max_tokens: 4096
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an AI assistant specializing in extracting figure panel information from scientific manuscript captions.
            
            Your task is to extract ONLY the panel labels and their descriptions from a figure caption:
            1. Identify all panel labels (A, B, C, etc.)
            2. Extract the description for each panel
            
            Guidelines:
            - Panel labels typically appear as (A), (B), etc., or A), B), etc. in the caption
            - Make sure to extract ALL panel labels in the caption
            - Extract panel descriptions EXACTLY as they appear (VERBATIM)
            - Panel labels must follow a monotonically increasing sequence:
              * For letters: A, B, C, D, E... (not A, B, D, E...)
              * For Roman numerals: I, II, III, IV... (not I, II, IV...)
              * For numbers: 1, 2, 3, 4... (not 1, 3, 4...)
            
            CRITICAL: You have access to a tool called 'verify_panel_sequence' that checks if your panel labels follow a complete sequence without gaps.
            ALWAYS use this tool to verify your panel labels before finalizing your answer.
            
            If the tool indicates that your sequence has gaps:
            1. Add the missing panel labels to your list
            2. Use empty strings as captions for the added panels
            
            Return your result as:
            {
              "figure_label": "Figure X",
              "panels": [
                {"panel_label": "A", "panel_caption": "Description of panel A"},
                {"panel_label": "B", "panel_caption": "Description of panel B"},
                ...
              ]
            }
          
          user: |
            Extract all panel labels and their descriptions from the following caption for $figure_label:
            
            $figure_caption
            
            Make sure to include ALL panels and verify that your panel sequence is complete without gaps using the verification tool.    # 3) Extract sources from data availability section
    ##########################################################
    extract_data_sources:
      openai:
        model: "gpt-4o-mini"
        temperature: 0.1
        top_p: 0.5
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an expert at extracting structured data source information from scientific Data Availability sections.
            Your task is to identify and extract information about databases, accession numbers, and URLs into a specific JSON format.

            Expected output format:
            ```
            [
              {
                "database": "Database name",
                "accession_number": "ID",
                "url": "https://identifiers.org/db:ID"
              }
            ]
            ```
            
            Critical instructions:
            1. Extract EVERY database source mentioned
            2. Normalize database names using the provided registry `Database Registry Information` when available
            3. Use the identifiers.org URL pattern when available, constructed by combining the identifiers.org pattern with the accession number
            4. Include COMPLETE accession numbers and/or DOIs when present in the `accession_number` field
            5. For databases in the registry, follow these rules:
              - Always use the exact normalized "name" from the registry
              - When possible, construct the URL using the identifiers.org pattern + accession number
              - If identifiers.org pattern is not available, use the original URL or the URL pattern from the registry
            6. For databases NOT in the registry, use the name and URL as provided in the text
            7. Output valid JSON array of objects
            8. Return empty array [] if no database sources found
            9. Do not:
              - Create/guess URLs without sufficient information
              - Add partial information
              - Include file paths or other resources
              - Include explanatory text

            **VERY IMPORTANT**
            You will receive a `Database Registry Information` to keep all the information available.
            This will be inclujded in a markdown table as the following:

            ```markdown
              "| Database Name | Identifiers Pattern | Sample ID | Sample Identifiers URL |\n"
              "|--------------|-------------------|-----------|----------------------|\n"

            ```

            Youy MUST return the database links following the fields `sample_identifiers_url` with the correct provided ID.

            **IMPORTANT**

            * If the database is present in the `Database Registry Information`
              - Return always be mandatory to return first the `identifiers.org` link
            * If the database is *NOT* present in the `Database Registry Information`
              - Return the links exactly as they appear in the input text

            As an example, the output for the following input:

            ```
            The RNAseq data from this publication have been deposited to the GEO database (https://www.ncbi.nlm.nih.gov/geo/) and assigned the accession number GSE292794. Data used in this study have been deposited to the BioStudies database and were assigned the accession number S-BSST1936 in following link: https://www.ebi.ac.uk/biostudies/studies/S-BSST1936.
            ```

            Should be the following output:

            ```
            [
              {
                "database": "BioStudies",
                "accession_number": "S-BSST1936",
                "url": "https://identifiers.org/biostudies:S-BSST1936"
              },
              {
                "database": "Gene Expression Omnibus",
                "accession_number": "GSE292794",
                "url": "https://identifiers.org/geo:GSE292794"
              },
            ]
            ```


            Another example input:

            ```
              All sequencing data has been deposited in the DNA Data Bank of Japan.

                RNA-seq; DRA004290 (https://ddbj.nig.ac.jp/resource/sra-submission/DRA004290)
            ```

            Should be the following output. Note that there is no identifiers.org link because the 
            DNA Data Bank of Japan is not present in the Database registry provided.

            ```
              [
                {
                  "database": "DNA Data Bank of Japan",
                  "accession_number": "DRA004290",
                  "url": "https://ddbj.nig.ac.jp/resource/sra-submission/DRA004290"
                }
              ]
            ```

            Database Registry Information:
            
          user: |
            Extract all database sources and their details from this Data Availability section:

            $data_availability
    ##########################################################
    # 4) Assign Panel Source Step
    ##########################################################
    assign_panel_source:
      openai:
        model: "gpt-4o"
        temperature: 0.3
        top_p: 1.0
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an expert AI assistant for analyzing scientific data organization, particularly for matching source data files to specific panels within scientific figures. Your task is to analyze file lists from source data ZIP files and determine which files correspond to which figure panels.

            Follow these guidelines carefully:

            1. Examine the provided panel labels (A, B, C, etc.) and list of data files.

            2. Analyze file names and patterns to match files with specific panels based on:
              - Panel letter indicators in file names
              - Data type descriptions that match panel content
              - Numerical sequences that align with panel ordering
              - File groupings that logically correspond to panel data

            3. For each panel, assign:
              - Files that explicitly mention that panel's label
              - Files containing data shown in that panel
              - Associated raw data files
              - Analysis files specific to that panel
              - Any supporting files clearly related to that panel's data

            4. Files that cannot be confidently assigned to specific panels should be marked as 'unassigned'.

            5. Important rules:
              - Each file should only be assigned to one panel unless there's explicit evidence it belongs to multiple. 
              - If a data file belongs to multiple panels, add it to `not_assigned_files`
              - When in doubt, mark files as 'not_assigned_files' rather than guessing
              - Include ALL files in your response (either assigned to panels or marked as unassigned)

            THIS IS AN EXAMPLE OF THE OUTPUT YOU SHOULD PROVIDE, given this input example:
            INPUT EXAMPLE: ['suppl_data/figure_1.zip:A/A_1.csv', 'suppl_data/figure_1.zip:A/A_2.csv', 'suppl_data/figure_1.zip:A/A_3.csv', 'suppl_data/figure_1.zip:B/B_1.csv', 'suppl_data/figure_1.zip:B/B_2.csv', 'suppl_data/figure_1.zip:B/B_3.csv', 'suppl_data/data_table.csv']
            CORRECT OUTPUT:
            ```json
              {
                "assigned_files": [
                  {
                      "panel_label": "A",
                      "panel_sd_files": ['suppl_data/figure_1.zip:A/A_1.csv', 'suppl_data/figure_1.zip:A/A_2.csv', 'suppl_data/figure_1.zip:A/A_3.csv'],
                  },
                  {
                    "panel_label": "B",
                    panel_sd_files: ['suppl_data/figure_1.zip:B/B_1.csv', 'suppl_data/figure_1.zip:B/B_2.csv', 'suppl_data/figure_1.zip:B/B_3.csv'],
                  }
                ],
                "not_assigned_files": ['suppl_data/data_table.csv']
              }
            ```

            NOW YOU WILL RECEIVE THE REAL USER INPUT THAT YOU MUST ANALYZE, following the format:

            Panel labels: $panel_labels

            File list: $file_list

          user: |
          
            Panel labels: $panel_labels

            File list: $file_list

    ##########################################################
    # 5) Match Caption Panel Step
    ##########################################################
    match_caption_panel:
      openai:
        model: "gpt-4o"
        temperature: 0.3
        top_p: 1.0
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an AI assistant specialized in analyzing scientific figures. Your task is to match panel images with their corresponding captions from the main figure caption. Follow these instructions carefully:

            1. Look at the provided panel image and read the full figure caption carefully.
            2. Identify which part of the caption corresponds to the panel image you see.
            3. Look for panel labels like (A), (B), etc., or descriptions that clearly match the image content.
              - These panel labels will be in most of the cases upper case letters A, B, C..
              - They will be located in most of the cases in the upper left corener of the image
              - Please ensure to panel label detection as the primary panel assignement method.
              - Only if you do not find the panel label follow the steps below. 
            4. If you would not find a panel label in the image, then, assign a label to the panel image
              by comparing to the most likely panel caption in the figure legend given to you int he context.

            5. Ensure panel labels are in the specified format below.

            Example response format:

            {
              "panel_label": "A",
              "panel_caption": ""
            }

          user: |
            Please analyze this panel image from a figure with the following caption:

            $figure_caption

            Based on the image content and the caption text, identify which panel this represents and provide its specific caption maintaining scientific accuracy and completeness."""


    ##########################################################
    # 6) Object Detection Step (non-AI)
    ##########################################################
    object_detection:
      model_path: "data/models/panel_detection_model_no_labels.pt"
      confidence_threshold: 0.25
      iou_threshold: 0.1
      image_size: 512
      max_detections: 30
