##########################################################
#  Default Profile
##########################################################
default: &default
  pipeline:
    ##########################################################
    # 1) Extract  Figure Legends and Data Availability Sections
    ##########################################################
    extract_sections:
      openai:
        # OpenAI-specific parameters for this step only
        model: "gpt-4o"
        temperature: 0.1
        top_p: 1.0
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are a scientific text analyzer focused on extracting relevant sections from scientific manuscripts.
            You will extract the sections `figure legends` and `data availability` from the manuscript text provided.
            Your task is ONLY to find and return the complete figure-related text content from the manuscript.
                
            The text will be encoded as a `HTML` string and you are required to keep all the information available,
            but extracting only the text of both sections.

            THE RETURN MUST BE DONE WITHOUT ANY HTML CODE ON IT. JUST PLANE TEXT

            Key Instructions for extracting `Figure Legends` section:
            1. Look for figure captions throughout the entire document - they can appear:
              - In a dedicated section marked as "Figure Legends", "Figure Captions", etc.
              - Embedded in the results section
              - At the end of the manuscript
              - In an appendix section
              - Or anywhere else in the document

            2. Find ALL figure captions, including:
              - Main figures (Figure 1, Figure 2, etc.)
              - Expanded View figures (EV Figures)
              - Supplementary figures
              - Figure legends
              - Figure descriptions

            3. IMPORTANT: Return the COMPLETE TEXT found, preserving:
              - All formatting and special characters
              - Statistical information
              - Scale bars and measurements
              - Panel labels and descriptions
              - Source references
              - Do not include HTML tags in the response

            4. DO NOT:
              - Modify or rewrite the text
              - Summarize or shorten descriptions
              - Skip any figure-related content
              - Add any explanatory text of your own

            Key Instructions for extracting `Data availability` section:
            1. Look for the section titled "Data Availability" or similar in the manuscript.
            2. Extract the content of this section.
            3. If there are embedded hyperlinks in the HTML, please include them in the extracted text.
            4. Follow same formating instructions as for the `Figure Legends` section.

            INPUT: Expected figures: $expected_figure_count

            Expected figure labels: $expected_figure_labels

            Manuscript_text: $manuscript_text

            OUTPUT: 

            ```json
            {
              "figure_legends": "Complete figure-related text content from the manuscript",
              "data_availability": "Complete data availability section content from the manuscript"
            }
            ```
          user: |
            Expected figures: $expected_figure_count

            Expected figure labels: $expected_figure_labels
            
            Manuscript_text: $manuscript_text

            Return ONLY the found figure-related text, exactly as it appears in the document.

    ##########################################################
    # 2) Extract Individual Captions Step
    ##########################################################
    extract_individual_captions:
      openai:
        # Potentially different parameters here, if desired
        model: "gpt-4o-mini"
        temperature: 0.1
        top_p: 1.0
        max_tokens: 4092
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an AI assistant specializing in extracting figure captions from scientific manuscripts. 
            A section containing ALL figure captions has been provided.

            Your task is to parse these captions into a structured format:

            1. You MUST extract EXACTLY $expected_figure_count figure captions from the provided text.

            2. For each caption (Figure 1 through Figure $expected_figure_count):
              - Extract the TITLE of the figure (the main descriptive sentence before any panel descriptions)
              - Copy the ENTIRE caption text EXACTLY as it appears
              - Extract panel information, including:
                * Panel labels (e.g., A, B, C)
                * Panel captions
                * Keep the panel captions EXACTLY as they are in the text
              - Maintain ALL formatting, punctuation, and special characters
              - DO NOT modify or summarize the text

            3. Create a JSON object where:
              - Keys are "Figure 1", "Figure 2", etc. (up to $expected_figure_count)
              - Values are objects containing:
                * "title": The main descriptive sentence of the figure
                * "caption": The complete, exact caption text
                * "panels": A list of panel objects with "panel_label" and "panel_caption"

            4. RULES:
              - Include ONLY main figures (1,2,3...)
              - Skip EV figures or supplementary figures
              - Maintain consecutive numbering
              - Keep all statistical information and references
              - Do not include the title in the caption text

            The figures typically appear as:

            Figure X: {Caption Title}. {Caption text}

            Example output format:
            ```json
            [
              "Figure 1": {
                "figure_label": "Figure 1",
                "caption_title": "Main descriptive sentence of the figure",
                "figure_caption": "Figure caption not including title and label, but including all panel descriptions",
                "panels": [
                  {"panel_label": "A", "panel_caption": "Description of panel A"},
                  {"panel_label": "B", "panel_caption": "Description of panel B"}
                ]
              },
              {
                "figure_label": "Figure 2"
                "caption_title": "Analysis of protein expression in response to treatment",
                "figure_caption": "A) Western blot analysis... B) Quantification of...",
                "panels": [
                  {"panel_label": "A", "panel_caption": "Western blot analysis"},
                  {"panel_label": "B", "panel_caption": "Quantification of..."}
                ]
              }
            ]
            ```
          user: |
            Figure captions of the document: $figure_captions

            Expected figure count: $expected_figure_count

            Expected labels: $expected_figure_labels

    ##########################################################
    # 3) Extract sources from data availability section
    ##########################################################
    extract_data_sources:
      openai:
        model: "gpt-4o-mini"
        temperature: 0.1
        top_p: 0.5
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an expert at extracting structured data source information from scientific Data Availability sections.
            Your task is to identify and extract information about databases, accession numbers, and URLs into a specific JSON format.

            Expected output format:
            ```
            [
              {
                "database": "name of database",
                "accession_number": "exact accession number",
                "url": "complete URL (or DOI) if provided"
              }
            ]
            ```
            
            Critical instructions:
            1. Extract EVERY database source mentioned
            2. Use EXACT database names as written
            3. Include COMPLETE accession numbers and / or DOIs when present. Include in `accession_number` field.
            4. Include FULL URLs when present
            5. Output valid JSON array of objects
            6. Return empty array [] if no database sources found
            7. Do not:
              - Create/guess URLs
              - Add partial information
              - Include file paths or other resources
              - Include explanatory text

          user: |
            Extract all database sources and their details from this Data Availability section:

            $data_availability

    ##########################################################
    # 4) Assign Panel Source Step
    ##########################################################
    assign_panel_source:
      openai:
        model: "gpt-4o"
        temperature: 0.3
        top_p: 1.0
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            You are an expert AI assistant for analyzing scientific data organization, particularly for matching source data files to specific panels within scientific figures. Your task is to analyze file lists from source data ZIP files and determine which files correspond to which figure panels.

            Follow these guidelines carefully:

            1. Examine the provided panel labels (A, B, C, etc.) and list of data files.

            2. Analyze file names and patterns to match files with specific panels based on:
              - Panel letter indicators in file names
              - Data type descriptions that match panel content
              - Numerical sequences that align with panel ordering
              - File groupings that logically correspond to panel data

            3. For each panel, assign:
              - Files that explicitly mention that panel's label
              - Files containing data shown in that panel
              - Associated raw data files
              - Analysis files specific to that panel
              - Any supporting files clearly related to that panel's data

            4. Files that cannot be confidently assigned to specific panels should be marked as 'unassigned'.

            5. Important rules:
              - Each file should only be assigned to one panel unless there's explicit evidence it belongs to multiple. 
              - If a data file belongs to multiple panels, add it to `not_assigned_files`
              - When in doubt, mark files as 'not_assigned_files' rather than guessing
              - Include ALL files in your response (either assigned to panels or marked as unassigned)

            THIS IS AN EXAMPLE OF THE OUTPUT YOU SHOULD PROVIDE, given this input example:
            INPUT EXAMPLE: ['suppl_data/figure_1.zip:A/A_1.csv', 'suppl_data/figure_1.zip:A/A_2.csv', 'suppl_data/figure_1.zip:A/A_3.csv', 'suppl_data/figure_1.zip:B/B_1.csv', 'suppl_data/figure_1.zip:B/B_2.csv', 'suppl_data/figure_1.zip:B/B_3.csv', 'suppl_data/data_table.csv']
            CORRECT OUTPUT:
            ```json
              {
                "assigned_files": [
                  {
                      "panel_label": "A",
                      "panel_sd_files": ['suppl_data/figure_1.zip:A/A_1.csv', 'suppl_data/figure_1.zip:A/A_2.csv', 'suppl_data/figure_1.zip:A/A_3.csv'],
                  {
                    "panel_label": "B",
                    panel_sd_files: ['suppl_data/figure_1.zip:B/B_1.csv', 'suppl_data/figure_1.zip:B/B_2.csv', 'suppl_data/figure_1.zip:B/B_3.csv'],
                  }
                ],
                "not_assigned_files": ['suppl_data/data_table.csv']
              }
            ```

            NOW YOU WILL RECEIVE THE REAL USER INPUT THAT YOU MUST ANALYZE, following the format:

            Panel labels: $panel_labels

            File list: $file_list

          user: |
          
            Panel labels: $panel_labels

            File list: $file_list

    ##########################################################
    # 5) Match Caption Panel Step
    ##########################################################
    match_caption_panel:
      openai:
        model: "gpt-4-vision-preview"
        temperature: 0.3
        top_p: 1.0
        max_tokens: 2048
        frequency_penalty: 0.0
        presence_penalty: 0.0
        json_mode: true
        prompts:
          system: |
            # System instructions for matching panels to captions...
          user: |
            # User prompt template for matching panels...


    ##########################################################
    # 6) Object Detection Step (non-AI)
    ##########################################################
    object_detection:
      model_path: "data/models/panel_detection_model_no_labels.pt"
      confidence_threshold: 0.25
      iou_threshold: 0.1
      image_size: 512
      max_detections: 30
