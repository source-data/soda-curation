{
  "manuscript_id": "MSB-2023-12087",
  "xml": "MSB-2023-12087/MSB-2023-12087.xml",
  "docx": "MSB-2023-12087/doc/Munck3.docx",
  "pdf": "MSB-2023-12087/pdf/MSB-2023-12087.pdf",
  "appendix": ["MSB-2023-12087/suppl_data/EV Figures Source Data.zip"],
  "figures": [
    {
      "figure_label": "Figure 1",
      "img_files": ["MSB-2023-12087/graphic/Figure1.pdf"],
      "sd_files": [],
      "figure_caption": "A) Illustration of Hamming code for error correction in data transmission. Transmission of data (d) and parity (p) bits enables error correction via redundancy (https://en.wikipedia.org/wiki/Hamming_code). B) Diagram showing the different sources of metadata information and how to bundle them. Three independent resources – the electronic labnotebook, the data-associated metadata, and the publication – are shown as redundant entries. An AI language model can be used to extract required and standardized data elements for verification, using codewords as a means of error correction analogous to error correction in communication. C) Heatmap display of similarities between sources by keyword. A Jupyter notebook using GPT-4 has been used to create a structured output in the form of a CSV file, (see Table 1). The digestion of a labnotebook entry, a metadata file server file, and this manuscript are used to check for keywords. The consistency of the keywords across the sources is displayed in a heatmap using the cosine distance for semantic similarity estimation (https://spacy.io/api/doc).",
      "caption_title": "Linking metadata sources and digesting them with language models to generate structured outputs and representations of similarity.",
      "panels": [
        {
          "panel_label": "A",
          "panel_caption": "",
          "sd_files": []
        },
        {
          "panel_label": "B",
          "panel_caption": "",
          "sd_files": []
        },
        {
          "panel_label": "C",
          "panel_caption": "",
          "sd_files": []
        }
      ]
    }
  ],
  "data_availability": {
    "section_text": "",
    "data_sources": []
  },
  "all_captions": ""
}
